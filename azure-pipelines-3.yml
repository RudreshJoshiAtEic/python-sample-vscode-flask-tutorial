# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

pool:
  vmImage: ubuntu-latest

strategy:
  matrix:
    Python38:
      python.version: '3.8'
    Python39:
      python.version: '3.9'
    Python310:
      python.version: '3.10'
    Python311:
      python.version: '3.11'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    pip install pytest pytest-azurepipelines
    pytest
  displayName: 'pytest'

- script: |
    cd $(Build.Repository.LocalPath)
    #python -m pytest $(Build.Repository.LocalPath)/<unit_tests_path>/*.py --junitxml=test-unit.xml
    python -m pytest $(Build.Repository.LocalPath)/*.py --junitxml=test-unit.xml

  displayName: 'Run Unit Tests'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: 'test-unit.xml'

- script: |
    pip install pytest pytest-azurepipelines
    pip install pytest-cov
    pytest --doctest-modules --junitxml=junit/test-results.xml --cov=. --cov-report=xml
  displayName: 'pytest'
  
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/test-*.xml'

- pwsh: |
    $organization = "v-rujoshi"
    $project = "v-rujoshi"
    $planId = 1
    $password = ConvertTo-SecureString -String $env:SYSTEM_ACCESSTOKEN -AsPlainText -Force
    # https://v-rujoshi@dev.azure.com/v-rujoshi/v-rujoshi/_git/v-rujoshi
    # https://dev.azure.com/v-rujoshi/v-rujoshi/_testPlans/define?planId=1&suiteId=2
    # $url = "https://dev.azure.com/$organization/$project/_apis/test/Plans/$planId/suites?api-version=5.0"
   
    $url = "https://dev.azure.com/$organization/$project/_testPlans/Plans/$planId/suites?api-version=5.0"

    $cred = New-Object –TypeName "System.Management.Automation.PSCredential" –ArgumentList "AzPipeline", $password

    $response = Invoke-RestMethod -Uri $url -Authentication Basic -Method Get -Credential $cred

    $testSuites = $response |
      ForEach-Object{ $_.value.id} |
      Join-String -Separator ', '

    Write-Host "##vso[task.setvariable variable=testSuites;]$testSuites"
  env:
    SYSTEM_ACCESSTOKEN: $(System.AccessToken)

- task: VSTest@2
  inputs:
    testSelector: testPlan
    testPlan: 1
    testSuite: $(testSuites)
    testConfiguration: 2
    uiTests: true
    testRunTitle: 'Automated UI testing'