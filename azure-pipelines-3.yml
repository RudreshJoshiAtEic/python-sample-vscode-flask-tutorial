# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
#- main
   none

pool:
  vmImage: ubuntu-latest

strategy:
  matrix:
    #Python38:
    #  python.version: '3.8'
    #Python39:
    #  python.version: '3.9'
    #Python310:
    #  python.version: '3.10'
    Python311:
      python.version: '3.11'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    pip install pytest pytest-azurepipelines
    pytest
  displayName: 'pytest'

- script: |
    cd $(Build.Repository.LocalPath)
    #python -m pytest $(Build.Repository.LocalPath)/<unit_tests_path>/*.py --junitxml=test-unit.xml
    python -m pytest $(Build.Repository.LocalPath)/*.py --junitxml=test-unit.xml

  displayName: 'Run Unit Tests'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: 'test-unit.xml'

- script: |
    pip install pytest pytest-azurepipelines
    pip install pytest-cov
    pytest --doctest-modules --junitxml=junit/test-results.xml --cov=. --cov-report=xml
  displayName: 'pytest'
  
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/test-*.xml'

- pwsh: |
    $organization = "v-rujoshi"
    $project = "v-rujoshi"
    $planId = 1
    $password = ConvertTo-SecureString -String $env:SYSTEM_ACCESSTOKEN -AsPlainText -Force
    # https://v-rujoshi@dev.azure.com/v-rujoshi/v-rujoshi/_git/v-rujoshi
    # https://dev.azure.com/v-rujoshi/v-rujoshi/_testPlans/define?planId=1&suiteId=2
    # $url = "https://dev.azure.com/$organization/$project/_apis/test/Plans/$planId/suites?api-version=5.0"
   
    #$url = "https://dev.azure.com/$organization/$project/_testPlans/Plans/$planId/suites?api-version=5.0"
    
    #$url = "https://dev.azure.com/{organization}/{project}/_apis/testplan/Plans/{planId}/suites?api-version=7.1"

    #$url = "https://dev.azure.com/{organization}/{project}/_apis/testplan/Plans/{planId}/suites?expand=Children, DefaultTesters&api-version=5.1-preview.1"

    #$url = "https://dev.azure.com/v-rujoshi/v-rujoshi/_testPlans/define?planId=1/suites?api-version=7.1"

    $uri = "https://dev.azure.com/v-rujoshi/v-rujoshi/_testPlans/plans?planId=1&suiteId=3"



    #$cred = New-Object –TypeName "System.Management.Automation.PSCredential" –ArgumentList "AzPipeline", $password

    #    $response = Invoke-RestMethod -Uri $url -Authentication Basic -Method Get -Credential $cred

    #    $testSuites = $response |
    #      ForEach-Object{ $_.value.id} |
    #      Join-String -Separator ', '
    #$x = 0
    #Invoke-RestMethod -Uri $uri | ForEach-Object -Begin  {$x++} 
    #echo $x
    #-End
    # $x
    # works , displays full html , javascript 
    #$testSuites = Invoke-RestMethod -Uri $uri
    #echo $testSuites.value
    
    $getAllTestSuites = "https://dev.azure.com/v-rujoshi/v-rujoshi/_testPlans/plans?planId=1&suites?$apiVersion"
    $testSuites = Invoke-RestMethod  -Uri $getAllTestSuites -Method Get -ContentType "application/json" -Headers $header -ConnectionTimeoutSeconds 120 -OperationTimeoutSeconds 120 
    echo $testSuites.value


    # Write-Host "##vso[task.setvariable variable=testSuites;]$testSuites"
    
    # Get all test points for a test suite
    $getAllTestPoints = "https://dev.azure.com/v-rujoshi/v-rujoshi/_testPlans/plans?planId=1&suiteId=3/points?$apiVersion"
    $testPoints= Invoke-RestMethod  -Uri $getAllTestPoints -Method Get -ContentType "application/json" -Headers $header
    $getTestPointsId = $testPoints.value.id -join ','  

    $test = "[$getTestPointsId]" 
    echo $test


    #$getAllTestPlans = "https://dev.azure.com/v-rujoshi/v-rujoshi/_apis/test/plans?api-version=7.1"

    $getAllTestPlans = "https://dev.azure.com/v-rujoshi/v-rujoshi/_apis/test/plans?"

    $testResponse = Invoke-RestMethod -Uri $getAllTestPlans

    echo "See if displays any testresponse "

    echo $testResponse.value

    echo "Does it display anything now ?  "
    # works , displays full html , javascript : lets see 
    $testResponse2 = Invoke-RestMethod -Uri $uri -Method Get -ContentType "application/json" -Headers $header -ConnectionTimeoutSeconds 120 -OperationTimeoutSeconds 120
    echo $testResponse2.value
    echo $header
    echo $testResponse2
    

    $orgUrl = "https://dev.azure.com/{v-rujoshi}"
    $projUrl = "{v-rujoshi}"
    $apiVersion = "api-version=5.0"
    $RAgetAllTestPlans = "$orgUrl/$projUrl/_apis/test/plans?$apiVersion"
    #$RAtestPlans = Invoke-RestMethod  -Uri $RAgetAllTestPlans -Method Get -ContentType "application/json" -Headers $header
    $RAtestPlans = Invoke-RestMethod  -Uri "https://spsprodcin1.vssps.visualstudio.com/_signin?realm=dev.azure.com&reply_to=https%3A%2F%2Fdev.azure.com%2Fv-rujoshi%2Fv-rujoshi%2F_testPlans%2Fplans%3FplanId%3D1&redirect=1&hid=d00cbec9-4445-4f9b-8ca1-a83a162977fb&context=eyJodCI6MiwiaGlkIjoiMzM0ZTJkMWUtYzA2NS00OTc3LWI5YTEtYzEyYjM5ZjIyNTM2IiwicXMiOnt9LCJyciI6IiIsInZoIjoiIiwiY3YiOiIiLCJjcyI6IiJ90#ctx=eyJTaWduSW5Db29raWVEb21haW5zIjpbImh0dHBzOi8vbG9naW4ubWljcm9zb2Z0b25saW5lLmNvbSIsImh0dHBzOi8vbG9naW4ubWljcm9zb2Z0b25saW5lLmNvbSJdfQ2" -Method Get -ContentType "application/json" -Headers $header -TimeoutSec 120
    echo "Displaying RATestPlans"
    echo $RAtestPlans


  env:
    SYSTEM_ACCESSTOKEN: $(System.AccessToken)

#- task: VSTest@2
#  inputs:
#    testSelector: testPlan
#    testPlan: 1
#    testSuite: $(testSuites)
#    testConfiguration: 2
#    uiTests: true
#    testRunTitle: 'Automated UI testing'